<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="instagram"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="accessToken" expression="json-eval($.accessToken)"/>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="token" expression="json-eval($.token)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <property name="mediaId" expression="json-eval($.mediaId)"/>
            <property name="count" expression="json-eval($.count)"/>
            <property name="maxLikeId" expression="json-eval($.maxLikeId)"/>
            <property name="minId" expression="json-eval($.minId)"/>
            <property name="maxId" expression="json-eval($.maxId)"/>
            <property name="q" expression="json-eval($.q)"/>
            <property name="maxTimestamp" expression="json-eval($.maxTimestamp)"/>
            <property name="minTimestamp" expression="json-eval($.minTimestamp)"/>
            <property name="lat" expression="json-eval($.lat)"/>
            <property name="lng" expression="json-eval($.lng)"/>
            <property name="distance" expression="json-eval($.distance)"/>
            <property name="foursquareV2Id" expression="json-eval($.foursquareV2Id)"/>
            <property name="foursquareId" expression="json-eval($.foursquareId)"/>
            <property name="locationId" expression="json-eval($.locationId)"/>
            <property name="tagName" expression="json-eval($.tagName)"/>
            <property name="query" expression="json-eval($.query)"/>
            <property name="mediaId" expression="json-eval($.mediaId)"/>
            <property name="queryName" expression="json-eval($.queryName)"/>

            <instagram.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <accessToken>{$ctx:accessToken}</accessToken>
            </instagram.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:getUserInfo">
                    <instagram.getUserInfo>
                        <userId>{$ctx:userId}</userId>
                    </instagram.getUserInfo>
                </case>
                <case regex="urn:getUserFollows">
                    <instagram.getUserFollows>
                        <userId>{$ctx:userId}</userId>
                    </instagram.getUserFollows>
                </case>
                <case regex="urn:getUserRelationship">
                    <instagram.getUserRelationship>
                        <userId>{$ctx:userId}</userId>
                    </instagram.getUserRelationship>
                </case>
                <case regex="urn:getSelfMediaLiked">
                    <instagram.getSelfMediaLiked>
                        <count>{$ctx:count}</count>
                        <maxLikeId>{$ctx:maxLikeId}</maxLikeId>
                    </instagram.getSelfMediaLiked>
                </case>
                <case regex="urn:getUserMediaRecent">
                    <instagram.getUserMediaRecent>
                        <userId>{$ctx:userId}</userId>
                        <count>{$ctx:count}</count>
                        <minId>{$ctx:minId}</minId>
                        <maxId>{$ctx:maxId}</maxId>
                        <maxTimestamp>{$ctx:maxTimestamp}</maxTimestamp>
                        <minTimestamp>{$ctx:minTimestamp}</minTimestamp>
                    </instagram.getUserMediaRecent>
                </case>
                <case regex="urn:getSelfRequestedBy">
                    <instagram.getSelfRequestedBy>
                        <userId>{$ctx:userId}</userId>
                    </instagram.getSelfRequestedBy>
                </case>
                <case regex="urn:getUserFollowedBy">
                    <instagram.getUserFollowedBy>
                        <userId>{$ctx:userId}</userId>
                    </instagram.getUserFollowedBy>
                </case>
                <case regex="urn:getUserRelationship">
                    <instagram.getUserRelationship>
                        <userId>{$ctx:userId}</userId>
                    </instagram.getUserRelationship>
                </case>
                <case regex="urn:getTagInfo">
                    <instagram.getTagInfo>
                        <tagName>{$ctx:tagName}</tagName>
                    </instagram.getTagInfo>
                </case>
                <case regex="urn:getTagRecent">
                    <instagram.getTagRecent>
                        <tagName>{$ctx:tagName}</tagName>
                        <minId>{$ctx:minId}</minId>
                        <maxId>{$ctx:maxId}</maxId>
                    </instagram.getTagRecent>
                </case>
                <case regex="urn:tagSearch">
                    <instagram.tagSearch>
                        <query>{$ctx:query}</query>
                    </instagram.tagSearch>
                </case>
                <case regex="urn:getMediaInfo">
                    <instagram.getMediaInfo>
                        <mediaId>{$ctx:mediaId}</mediaId>
                    </instagram.getMediaInfo>
                </case>
                <case regex="urn:getMediaSearch">
                    <instagram.getMediaSearch>
                        <lng>{$ctx:lng}</lng>
                        <lat>{$ctx:lat}</lat>
                        <maxTimestamp>{$ctx:maxTimestamp}</maxTimestamp>
                        <minTimestamp>{$ctx:minTimestamp}</minTimestamp>
                        <distance>{$ctx:distance}</distance>
                    </instagram.getMediaSearch>
                </case>
                <case regex="urn:getMediaLike">
                    <instagram.getMediaLike>
                        <mediaId>{$ctx:mediaId}</mediaId>
                    </instagram.getMediaLike>
                </case>
                <case regex="urn:userSearch">
                    <instagram.userSearch>
                        <count>{$ctx:count}</count>
                        <queryName>{$ctx:queryName}</queryName>
                    </instagram.userSearch>
                </case>
                <case regex="urn:getLocationInfo">
                    <instagram.getLocationInfo>
                        <locationId>{$ctx:locationId}</locationId>
                    </instagram.getLocationInfo>
                </case>
                <case regex="urn:getLocationRecent">
                    <instagram.getLocationRecent>
                        <locationId>{$ctx:locationId}</locationId>
                    </instagram.getLocationRecent>
                </case>
                <case regex="urn:locationSearch">
                    <instagram.locationSearch>
                        <lat>{$ctx:lat}</lat>
                        <lng>{$ctx:lng}</lng>
                        <distance>{$ctx:distance}</distance>
                    </instagram.locationSearch>
                </case>
                <case regex="urn:getMediaComment">
                    <instagram.getMediaComment>
                        <mediaId>{$ctx:mediaId}</mediaId>
                    </instagram.getMediaComment>
                </case>


            </switch>
            <filter source="$axis2:HTTP_SC" regex="^[^2][0-9][0-9]">
                <then>
                    <property name="CODE" expression="$axis2:HTTP_SC"/>
                    <switch source="$axis2:HTTP_SC">
                        <!--
                                                <case regex="403">
                                                    <property name="error_type" value="OAuthForbiddenException"/>
                                                    <property name="error_message" expression="json-eval($.message)"/>
                                                </case>
                        -->
                        <case regex="401">
                            <property name="ERROR_MESSAGE" value="Unauthorized"/>
                            <property name="error_description" expression="json-eval($.message)"/>
                        </case>
                        <case regex="403">
                            <property name="ERROR_MESSAGE" value="Forbidden"/>
                            <property name="error_description" expression="json-eval($.message)"/>
                        </case>
                        <case regex="404">
                            <property name="ERROR_MESSAGE" value="Not Found"/>
                        </case>
                        <case regex="400">
                            <property name="ERROR_MESSAGE" value="Bad Request"/>
                            <property name="error_description" expression="json-eval($.message)"/>
                        </case>

                    </switch>
                </then>
            </filter>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>